{"meta":{"title":"Hexo","subtitle":"","description":"","author":"John Doe","url":"https://lopgov.github.io","root":"/"},"pages":[],"posts":[{"title":"CF2061H2","slug":"CF2061H2","date":"2025-04-02T07:09:49.000Z","updated":"2025-04-03T08:40:54.332Z","comments":true,"path":"2025/04/02/CF2061H2/","permalink":"https://lopgov.github.io/2025/04/02/CF2061H2/","excerpt":"","text":"$link$ H1考虑必要条件。 $s, t$ 存在一个有效操作（这样可以重复操作然后一个个归位）。 因为所有点都要动很厉害。如果只需要一个点动，题目就会好做很多，所以就考虑让每个点来回移动。 每个连通块 $s, t$ 点数相同（十分重要&#x2F;qiang）。 和下面的条件一样为了第一个条件能够成功归位。 若连通块是二分图，则需要使得对应点数相同，可以枚举操作次数奇偶（否则无法归为）。 因为是来回移动，那么步数肯定会跟奇偶性相关，所以考虑二分图。另外如果不是二分图，因为有奇环，所以奇偶性就不重要了。 第一个条件拆点就可以二分图匹配&#x2F;流 做到 $\\Theta(nm)$&#x2F;$\\Theta(\\sqrt nm)$。 后两个条件先枚举操作次数的奇偶性，然后直接二分图染色的时候判掉。 具体见 H1代码（为什么这么像jly的，因为是借（抄）鉴（袭）的）证明的话，可以直接通过H2的构造。 H2现在需要一个连通且匹配边都在的一张图 $G$ 来构造。 把所求有效操作（即二分图匹配）拎出来合并到 $G$，因为每个点度数 $\\le 2$，所以是环和链组成的。 环太唐了，并且注意到如果是环，$s, t$ 的匹配边一定是交替出现。所以把 $t$ 的匹配换成 $s$ 的，$G$ 就变成一堆链了。 然后，考虑拆点 $(u,0),(u,1)$ 表示偶数&#x2F;奇数到达点 $u$。那么 $G$ 就是一个不一定连通的二分图了。 拆点是为了下面构造，这样能使 $s, t$ 中的点在树上的同一深度奇偶。 然后再加边让 $G$ 变成一棵树，构造每次找到最深的点及其匹配 $(t_u, t_v)$。然后再找到其最近的一个点 $(s_u, s_v)$，直接走过来。 那么就有 $\\Theta(n^2)$ 次的构造，所以会一起移动。发现只要每个点停 $2$ 步后移动就行，直接搞就是 $2n$ 次操作了。 如果要减少步数，那么一定会同时操作多次。因为是最近点，所以在最劣情况下，仍然只需要停留一步。 然后关于操作次数，令 $k$ 为匹配对数量，则最后一对点会延迟 $2k$ 步出发，而前面的匹配，至少会用掉 $k$ 个点不准走（就是 $t$ 啦），所以时间是 $n - k + 2k &#x3D; n + k \\le 2n$ 的啦。 代码自己翻一下吧，不好看就是了&#x2F;yun。","categories":[],"tags":[{"name":"Solution","slug":"Solution","permalink":"https://lopgov.github.io/tags/Solution/"}]},{"title":"CF923E","slug":"CF923E","date":"2025-03-27T03:24:00.000Z","updated":"2025-04-03T08:40:43.145Z","comments":true,"path":"2025/03/27/CF923E/","permalink":"https://lopgov.github.io/2025/03/27/CF923E/","excerpt":"","text":"$\\mathcal{link}$ 令 $f(m,i)$ 表示经过 $m$ 次操作后为值 $i$ 的概率，则 $f(0,i)&#x3D;p_i, f(m,i)$ 为答案。令生成函数 $F_m(x) &#x3D; \\sum \\limits_{i&#x3D;0}^n f(m,i)x^i$。则 $$F_{m+1}(x) &#x3D; \\sum \\limits_{i&#x3D;0}^n x^i \\sum \\limits_{j&#x3D;i}^n \\frac{f(m,j)}{j+1} &#x3D; \\sum \\limits_{j&#x3D;0}^n \\frac{f(m,j)}{j+1} \\sum \\limits_{i&#x3D;0}^j x^i \\ &#x3D; \\frac{1}{x-1}\\sum \\limits_{j&#x3D;0}^n \\frac{f(m,j)(x^{j+1}-1)}{j+1} &#x3D; \\frac{1}{x-1} \\sum \\limits_{j&#x3D;0}^n f(m,j) \\int_1^x t^j dt &#x3D; \\frac{1}{x-1} \\int_1^x F_m(t)dt \\$$ 好消息：$\\int_0^x f(t) dt&#x3D;\\int f(x)dx$。坏消息：积分下限为 $1$。于是令 $G_m(x) &#x3D; F_m(x+1)$。则$$G_{m+1}(x) &#x3D; \\frac{1}{x} \\int_1^{x+1}G_m(t+1)d(t+1) &#x3D; \\sum \\limits_{i&#x3D;0}^n \\frac{g(m,i)}{i+1}x^i \\$$所以发现 $g(m+1,i) &#x3D; \\frac{g(m,i)}{i+1}$，则 $g(m, i) &#x3D; \\frac{g(0,i)}{(i+1)^m}$。所以怎么算 $G_0(x)$： $$G_0(x) &#x3D; F_0(x+1) &#x3D; \\sum \\limits_{i&#x3D;0}^n p_i (x+1)^i &#x3D; \\sum \\limits_{i&#x3D;0}^n p_i \\sum \\limits_{j&#x3D;0}^i \\binom ij x^j \\g(0,i) &#x3D; \\sum \\limits_{j&#x3D;i}^n \\binom ji p_j \\g(0, n-i)(n-i)! &#x3D; \\sum \\limits_{j&#x3D;0}^{i} \\frac{(n-j)!}{(i-j)!}p_{n-j}$$ 令 $A(x) &#x3D; \\sum \\limits_{i&#x3D;0}^n (n-i)!g(0,n-i)x^i, B(x) &#x3D; \\sum \\limits_{i&#x3D;0}^n (n-i)! p_{n-i}x^i, C(x) &#x3D; \\sum \\limits_{i&#x3D;0}^n \\frac{x^i}{i!}$。则 $A(x)&#x3D;B(x)*C(x)$。 然后怎么算 $F_{m}(x)$，直接二项式反演：$$f(m,i) &#x3D; \\sum \\limits_{j&#x3D;1}^n (-1)^{j-i} \\binom ji g(m,i) \\f(m,n-i)(n-i)! &#x3D; \\sum \\limits_{j&#x3D;0}^i \\frac{(n-j)!}{(i-j)!(-1)^{i-j}} g(m,n-j) \\$$令 $A(x) &#x3D; \\sum \\limits_{i&#x3D;0}^n (n-i)!f(m,n-i)x^i, B(x) &#x3D; \\sum \\limits_{i&#x3D;0}^n (n-i)! g(m,n-i)x^i, C(x) &#x3D; \\sum \\limits_{i&#x3D;0}^{n} \\frac{(-1)^ix^i}{i!}$。则 $A(x)&#x3D;B(x)*C(x)$。","categories":[],"tags":[{"name":"Solution","slug":"Solution","permalink":"https://lopgov.github.io/tags/Solution/"}]},{"title":"莫反基础练习题","slug":"莫反基础练习题","date":"2025-03-27T01:15:20.000Z","updated":"2025-04-03T08:40:37.331Z","comments":true,"path":"2025/03/27/莫反基础练习题/","permalink":"https://lopgov.github.io/2025/03/27/%E8%8E%AB%E5%8F%8D%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/","excerpt":"","text":"$link$ 显然能拆分成两个问题： $$F_{type,0}(a,b,c) &#x3D; \\prod \\limits_{i&#x3D;1}^a \\prod \\limits_{j&#x3D;1}^b \\prod \\limits_{k&#x3D;1}^c i^{f(type)}\\F_{type,1}(a,b,c) &#x3D; \\prod \\limits_{i&#x3D;1}^a \\prod \\limits_{j&#x3D;1}^b \\prod \\limits_{k&#x3D;1}^c \\gcd(i,j)^{f(type)} \\F_{type}(a,b,c) &#x3D; \\frac{F_{type,0}(a,b,c) F_{type,0}(b,a,c)}{F_{type,1}(a,b,c) F_{type,1}(a,c,b)} \\$$ $type&#x3D;0$$$F_{0,0}(a,b,c) &#x3D; (a!)^{bc} \\F_{0,1}(a,b,c) &#x3D; \\prod \\limits_{i&#x3D;1}^a \\prod \\limits_{j&#x3D;1}^b \\gcd(i,j)^{c} &#x3D; \\prod \\limits_{d&#x3D;1}^{\\min(a,b)} d^{c\\left(\\sum \\limits_{t&#x3D;1} \\mu(t) \\left\\lfloor \\frac a{dt} \\right\\rfloor \\left\\lfloor \\frac b{dt} \\right\\rfloor\\right)} \\&#x3D; \\prod \\limits_{T&#x3D;1} \\left(\\prod \\limits_{d|T} d^{\\mu\\left(\\frac Td\\right)}\\right)^{\\left\\lfloor\\frac aT\\right\\rfloor\\left\\lfloor \\frac bT \\right\\rfloor c}$$ 括号里跟狄利克雷卷积一样，然后预处理前缀积，其他整除分块，所以预处理复杂度 $\\Theta(n \\log n)$，单次复杂度 $\\Theta\\left(\\sqrt{a} \\log a\\right)$。 $type&#x3D;1$$$F_{1,0}(a, b, c) &#x3D; \\left(\\prod \\limits_{i&#x3D;1}^a i^i\\right)^{g(b) g(c)}\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ g(x) &#x3D; \\frac{x(x+1)}2 \\F_{1,1}(a,b,c) &#x3D; \\prod \\limits_{i&#x3D;1}^a \\prod \\limits_{j&#x3D;1}^b \\gcd(i,j)^{i\\times j\\times g(c)} &#x3D; \\prod \\limits_{d&#x3D;1}^{\\min(a,b)} d^{ g(c)d^2\\sum \\limits_{i&#x3D;1}^{a&#x2F;d} \\sum \\limits_{j&#x3D;1}^{b&#x2F;d} \\sum \\limits_{t|i,t|j} \\mu(t) ij } \\&#x3D; \\left(\\prod \\limits_{d&#x3D;1}^{\\min(a,b)} d^{d^2 \\sum \\limits_{t&#x3D;1} \\mu(t)t^2 g\\left(\\frac a{td}\\right)g\\left(\\frac b{td}\\right)}\\right)^{g(c)} \\&#x3D; \\left( \\prod \\limits_{T&#x3D;1} \\left( \\prod \\limits_{d|T} d^{\\mu\\left(\\frac Td\\right)} \\right)^{T^2 g\\left(\\frac aT\\right) g\\left(\\frac bT\\right)} \\right)^{g(c)}$$ 预处理类似狄利克雷卷积的部分，然后求前缀积就能整除分块做了，时间和 $type&#x3D;0$ 相同。 $type&#x3D;2$标算太麻烦了，我们充分发扬人类智慧，想到 $\\exp,\\ln$（想过没想过真的能用）$$F_{2}(a,b,c) &#x3D; \\exp \\sum \\limits_{i&#x3D;1}^a \\sum \\limits_{j&#x3D;1}^b \\sum \\limits_{k&#x3D;1}^c \\gcd(i,j,k)\\ln\\left(\\frac{\\text{lcm}(i,j)}{\\gcd(i,j)}\\right) \\&#x3D; \\exp \\sum \\limits_{d&#x3D;1}^{\\min(a,b,c)} \\varphi(d) \\sum \\limits_{i&#x3D;1}^{\\left\\lfloor\\frac Ad\\right\\rfloor} \\sum \\limits_{j&#x3D;1}^{\\left\\lfloor \\frac Bd\\right\\rfloor} \\sum \\limits_{k&#x3D;1}^{\\left\\lfloor \\frac Cd\\right\\rfloor} \\ln\\left(\\frac{\\text{lcm}(i,j)}{\\gcd(i,j)}\\right) \\&#x3D; \\prod \\limits_{d&#x3D;1}^{\\min(a,b,c)} F_{0}^{\\varphi(d)}\\left(\\left\\lfloor \\frac Ad \\right\\rfloor, \\left\\lfloor\\frac Bd\\right\\rfloor, \\left\\lfloor\\frac Cd\\right\\rfloor\\right)$$直接求就是 $\\Theta\\left(a^{\\frac34}\\log a\\right)$。","categories":[],"tags":[{"name":"Solution","slug":"Solution","permalink":"https://lopgov.github.io/tags/Solution/"}]}],"categories":[],"tags":[{"name":"Solution","slug":"Solution","permalink":"https://lopgov.github.io/tags/Solution/"}]}